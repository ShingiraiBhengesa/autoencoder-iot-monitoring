[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "iot-anomaly-detection"
version = "1.0.0"
description = "Real-time IoT anomaly detection using autoencoders and Azure"
readme = "README.md"
requires-python = ">=3.11"
license = {file = "LICENSE"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "tensorflow>=2.13.0",
    "scikit-learn>=1.3.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.0.0",
    "streamlit>=1.28.0",
    "plotly>=5.17.0",
    "azure-eventhub>=5.11.0",
    "azure-identity>=1.15.0",
    "azure-keyvault-secrets>=4.7.0",
    "sqlalchemy>=2.0.0",
    "pyodbc>=5.0.0",
    "onnxruntime>=1.16.0",
    "tf2onnx>=1.15.0",
    "aiofiles>=23.0.0",
    "python-multipart>=0.0.6",
    "httpx>=0.25.0",
    "azure-functions>=1.18.0",
    "azure-functions-worker>=1.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.9.0",
    "ruff>=0.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/iot-anomaly-detection"
Repository = "https://github.com/yourusername/iot-anomaly-detection.git"
Issues = "https://github.com/yourusername/iot-anomaly-detection/issues"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["E", "F", "W", "I", "N", "B", "C4", "SIM", "TCH"]
ignore = ["E501", "B008", "B904"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --tb=short"
testpaths = ["tests"]
asyncio_mode = "auto"
